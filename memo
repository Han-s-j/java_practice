개발자에게 필요한 것
툴을 다루는 능력
인문학적인 능력 (의사소통, 이해)

31-01-2025
함수
어떤 작업을 수행하기 위한 명령문의 집합
어떤 값(파라미터)을 받아서 처리하고, 그 결과(리턴값)를 되돌려 준다.
파라미터를 받거나 받지 않으며, 리턴값 또한 없을 수도 있다.
반복하여 사용하는 코드에 대해 함수로 만들면, 중복 코드를 막을 수 있다.
매서드
특정 클래스나 객체와 연관된 함수를 의미함.
매서드는 그 객체의 내부 상태에 접근하거나 수정가능, 객체의 행동을 정의하는 데에 사용 됨.

포맷 문지
%d - 정수를 10진법으로 표시
%f - 부동소수점을 10진법으로 표시 (%.2f - 소수점 두자리까지 출력)
%s, %S - 문자열 표시

03-02-2025
메소드, 배열 복습하기
배열 복사 중요함
다차원 배열 자리

package ch07_array;

public class ArrayEx2 {
	public static void main(String[] args) {
		// Q. 윌리를 찾아라!
		// findWally 문자열에 '월리'가 총 몇 개 있는지 출력하시오
		String findWally = "윌리울리일리울리울리일리월리일리윌리월리울리일리일리월리일리윌리일리윌리일리월리월리윌리울리윌리울리일리울리울리윌리일리";

//		int fixLength = 2;
//		int strArraySize = (int) Math.ceil((double) findWally.length() / fixLength);
//		String[] subFindWally = new String[strArraySize];

//		int index = 0;
//		for (int startIndex = 0; startIndex < findWally.length(); startIndex += fixLength) {
//			subFindWally[index++] = findWally.substring(startIndex,
//					Math.min(startIndex + fixLength, findWally.length()));
//			System.out.println(subFindWally[2]);
//			// 0. 반복문 만들기
//			// 1. 문자열 자르기 2개씩

//		String subFindWally = findWally.substring(0, 2);
//		String subFindWally2 = findWally.substring(2, 4);
//		String subFindWally3 = findWally.substring(4, 6);
//		System.out.println(subFindWally);
//		System.out.println(subFindWally2);
//		System.out.println(subFindWally3);
//		String [] arr = new String[findWally.length()/2];
//		String[] arr = new String[3];
//		arr[0] = subFindWally;
//		arr[1] = subFindWally2;
//		arr[2] = subFindWally3;
//		System.out.println(arr[2]);
//			// 2. 배열 0 자리 "월" 찾기
//			// 3. 같으면 카운트
//			int cnt = 0;
		int a = 0;
		int b = 2;
		String[] arr2 = new String[findWally.length()/2];
		for (int i = 0; i <= findWally.length()/2; i++) {

			arr2[i] = findWally.substring(a, b);
			a+=2;
			b+=2;
//			cnt++;
//				}
//			} 
//			System.out.println("월리는 총:" + cnt);
		}
	}
}

//}
